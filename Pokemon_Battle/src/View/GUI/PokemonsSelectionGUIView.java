/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package View.GUI;

import Controller.PokemonsSelectionController;
import View.Interfaces.PokemonsSelectionView;
import View.Utils.ViewChangeButton;
import Model.Trainer;
import View.Console.PokemonsSelectionConsoleView;
import View.Utils.MusicPlayer;

import java.awt.Color;
import java.awt.Graphics;
import java.awt.Image;

import javax.swing.BorderFactory;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.JTable;
import javax.swing.JButton;
import javax.swing.JScrollPane;
import javax.swing.JLabel;
import javax.swing.JTextField;
import java.awt.BorderLayout;
import javax.swing.JOptionPane;

/**
 *
 * @author crisc
 */
public class PokemonsSelectionGUIView extends JFrame implements PokemonsSelectionView {
    private PokemonsSelectionController controller;
    private Trainer[] trainers;
    private String[] pokemonsBattle = new String[2];
    FondoPanel fondo = new FondoPanel();


    /**
     * Creates new form PokemonsSelectionGUIView
     */
    public PokemonsSelectionGUIView() {
        this.setContentPane(fondo);
        initComponents();
    }

    public PokemonsSelectionGUIView(Trainer[] trainers) {
        this.trainers = trainers;
        this.setContentPane(fondo);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {

        jScrollPane2 = new JScrollPane();
        Table2 = new JTable();
        jScrollPane1 = new JScrollPane();
        Table1 = new JTable();
        battleButton = new JButton();
        trainer2 = new JLabel();
        trainer1 = new JLabel();
        trainerPanel1 = new JPanel();
        trainerPanel2 = new JPanel();
        infoPanel = new JPanel();
        infoLabel = new JLabel("Elijan el primer pokemon para la batalla");
        jTextField1 = new JTextField();
        jTextField2 = new JTextField();
        changeViewButton = new ViewChangeButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(734, 414));
        setSize(new java.awt.Dimension(734, 414));
        getContentPane().setLayout(null);

        Table2.setModel(new javax.swing.table.DefaultTableModel(
                new Object [][] {
                        {trainers[1].getPokemonTeam().get(0).getPokedexId() ,trainers[1].getPokemonTeam().get(0).getName(), trainers[1].getPokemonTeam().get(0).getType(), trainers[1].getPokemonTeam().get(0).getHp()},
                        {trainers[1].getPokemonTeam().get(1).getPokedexId() ,trainers[1].getPokemonTeam().get(1).getName(), trainers[1].getPokemonTeam().get(1).getType(), trainers[1].getPokemonTeam().get(1).getHp()},
                        {trainers[1].getPokemonTeam().get(2).getPokedexId() ,trainers[1].getPokemonTeam().get(2).getName(), trainers[1].getPokemonTeam().get(2).getType(), trainers[1].getPokemonTeam().get(2).getHp()}
                },
                new String [] {
                        "ID", "Pokemon", "Tipo", "Vida"
                }
        ) {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        });

        Table2.setFocusable(false);
        Table2.setRowSelectionAllowed(false);
        Table2.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(Table2);

        getContentPane().add(jScrollPane2);
        jScrollPane2.setBounds(470, 180, 240, 80);

        Table1.setModel(new javax.swing.table.DefaultTableModel(
                new Object [][] {
                        {trainers[0].getPokemonTeam().get(0).getPokedexId() ,trainers[0].getPokemonTeam().get(0).getName(), trainers[0].getPokemonTeam().get(0).getType(), trainers[0].getPokemonTeam().get(0).getHp()},
                        {trainers[0].getPokemonTeam().get(1).getPokedexId() ,trainers[0].getPokemonTeam().get(1).getName(), trainers[0].getPokemonTeam().get(1).getType(), trainers[0].getPokemonTeam().get(1).getHp()},
                        {trainers[0].getPokemonTeam().get(2).getPokedexId() ,trainers[0].getPokemonTeam().get(2).getName(), trainers[0].getPokemonTeam().get(2).getType(), trainers[0].getPokemonTeam().get(2).getHp()}
                },
                new String [] {
                        "ID", "Pokemon", "Tipo", "Vida"
                }
        ) {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        });

        Table1.setFocusable(false);
        Table1.setRowSelectionAllowed(false);
        Table1.getTableHeader().setReorderingAllowed(false);

        jScrollPane1.setViewportView(Table1);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(10, 180, 240, 80);

        battleButton.setFont(new java.awt.Font("Roboto Black", 3, 12)); // NOI18N
        battleButton.setText("BATALLA");
        battleButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                battleButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                battleButtonMouseExited(evt);
            }
        });
        battleButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                battleButtonActionPerformed(evt);
            }
        });
        getContentPane().add(battleButton);
        battleButton.setBounds(320, 250, 104, 22);

        changeViewButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                changeViewButtonActionPerformed(evt);
            }
        });
        getContentPane().add(changeViewButton);
        changeViewButton.setBounds(290, 310, 150, 20);

        trainerPanel2.setBackground(new Color(230, 230, 230, 200));
        trainerPanel2.setLayout(new BorderLayout());
        trainerPanel2.setBorder(BorderFactory.createEmptyBorder(3, 5, 3, 5));

        trainer2.setFont(new java.awt.Font("Roboto Black", 3, 12)); // NOI18N
        trainer2.setText(trainers[1].getName());
        trainer2.setHorizontalAlignment(JLabel.CENTER);
        trainerPanel2.add(trainer2, BorderLayout.CENTER);

        getContentPane().add(trainerPanel2);
        trainerPanel2.setBounds(550, 130, 100, 20);

        trainerPanel1.setBackground(new Color(230, 230, 230, 200));
        trainerPanel1.setLayout(new BorderLayout());
        trainerPanel1.setBorder(BorderFactory.createEmptyBorder(3, 5, 3, 5));

        trainer1.setFont(new java.awt.Font("Roboto Black", 3, 12)); // NOI18N
        trainer1.setText(trainers[0].getName());
        trainer1.setHorizontalAlignment(JLabel.CENTER);
        trainerPanel1.add(trainer1, BorderLayout.CENTER);
        getContentPane().add(trainerPanel1);
        trainerPanel1.setBounds(80, 140, 100, 20);

        infoPanel.setBackground(new Color(240, 240, 240, 200));
        infoPanel.setLayout(new BorderLayout());
        infoPanel.setBorder(BorderFactory.createEmptyBorder(3, 5, 3, 5));


        infoLabel.setFont(new java.awt.Font("Roboto Black", 3, 12));
        infoLabel.setHorizontalAlignment(JLabel.CENTER);
        infoPanel.add(infoLabel, BorderLayout.CENTER);

        getContentPane().add(infoPanel);
        infoPanel.setBounds(230, 280, 270, 20);

        jTextField1.setToolTipText("Selecciona el primer pokemon (ID)");
        jTextField1.setBounds(60, 280, 100, 20);
        getContentPane().add(jTextField1);

        jTextField2.setToolTipText("Selecciona el primer pokemon (ID)");
        jTextField2.setBounds(590, 280, 100, 20);
        getContentPane().add(jTextField2);


        pack();
    }// </editor-fold>

    private void battleButtonActionPerformed(java.awt.event.ActionEvent evt) {
        selectedPokemon[0] = jTextField1.getText().trim(); // ID del primer pokemon
        selectedPokemon[1] = jTextField2.getText().trim();

        if(validatePokemonSelection(selectedPokemon[0], selectedPokemon[1])) {
            nextView();
        }
    }

    private void battleButtonMouseExited(java.awt.event.MouseEvent evt) {
        battleButton.setBackground(Color.white);

    }

    private void battleButtonMouseEntered(java.awt.event.MouseEvent evt) {
        battleButton.setBackground(new Color (109, 188, 245));
    }

    private void changeViewButtonActionPerformed(java.awt.event.ActionEvent evt) {
        dispose();
        controller.changeView();
    }

    @Override
    public void setController(PokemonsSelectionController controller) {
        this.controller = controller;
    }

    @Override
    public void showMessage(String mensaje) {
        infoLabel.setText(mensaje);
    }

    @Override
    public void showMenu() {
        setVisible(true);
    }

    @Override
    public void playMusic(String rutaMusica) {
        MusicPlayer.playMusic(rutaMusica);
    }

    @Override
    public void stopMusic() {
        MusicPlayer.stopMusic();
    }

    String[] selectedPokemon = new String[2];
    @Override
    public void nextView() {
        dispose();
        stopMusic();
        playMusic("Pok√©mon-Black-_-White-Elite-Four-Battle-Music-_HQ_.wav");

         // ID del segundo pokemon
        BattleGUIView battleView = new BattleGUIView(trainers, selectedPokemon);
        battleView.setVisible(true);
    }

    @Override
    public boolean validatePokemonSelection(String pokemon1Id, String pokemon2Id) {
        // Validate the selected Pok√©mon IDs and update the info label accordingly
        if (pokemon1Id.isEmpty() || pokemon2Id.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Por favor, seleccionen sus Pokemon para la batalla.");
            return false;
        } if (trainers[0].getPokemonTeam().stream().noneMatch(p -> p.getPokedexId().equals(pokemon1Id))) {
            JOptionPane.showMessageDialog(this, "El Pokemon seleccionado por el Entrenador 1 no es v√°lido.");
            return false;
        } if (trainers[1].getPokemonTeam().stream().noneMatch(p -> p.getPokedexId().equals(pokemon2Id))) {
            JOptionPane.showMessageDialog(this, "El Pokemon seleccionado por el Entrenador 2 no es v√°lido.");
            return false;
        } else {
            pokemonsBattle[0] = pokemon1Id;
            pokemonsBattle[1] = pokemon2Id;
            return true;
        }
    }

    @Override
    public void showPokemonList(Model.Pokemon[] pokemons, String trainerName) {
        // Este m√©todo no se utiliza en la implementaci√≥n de la GUI
    }

    @Override
    public void showSelectedPokemon(String trainerName, Model.Pokemon pokemon) {
        // Este m√©todo no se utiliza en la implementaci√≥n de la GUI
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PokemonsSelectionGUIView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PokemonsSelectionGUIView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PokemonsSelectionGUIView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PokemonsSelectionGUIView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PokemonsSelectionGUIView().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify
    private JLabel trainer1;
    private JLabel trainer2;
    private JPanel trainerPanel1;
    private JPanel trainerPanel2;
    private JTable Table1;
    private JTable Table2;
    private JButton battleButton;
    private JScrollPane jScrollPane1;
    private JScrollPane jScrollPane2;
    private JTextField jTextField1;
    private JTextField jTextField2;
    private JLabel infoLabel;
    private JPanel infoPanel;
    private ViewChangeButton changeViewButton;

    // End of variables declaration

    class FondoPanel extends JPanel {
        private Image imagen;

        @Override
        public void paint(Graphics g){
            imagen = new ImageIcon(getClass().getResource("/View/Utils/fondoPokemones.jpeg")).getImage();
            g.drawImage(imagen, 0, 0, getWidth(), getHeight(), this);

            setOpaque(false);

            super.paint(g);
        }


    }

}