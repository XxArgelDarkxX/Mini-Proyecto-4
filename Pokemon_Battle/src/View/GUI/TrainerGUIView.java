package View.GUI;

import Model.Trainer;
import View.Interfaces.TrainerView;
import View.Utils.ViewChangeButton;
import java.awt.Color;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextField;
import javax.swing.JToggleButton;

import Controller.PokemonsSelectionController;
import Controller.TrainerController;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author crisc
 */
public class TrainerGUIView extends JFrame implements TrainerView {


    /**

     * Creates new form TrainerGUIView
     */
    private final Trainer[] trainers = new Trainer[2];

    public TrainerGUIView() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel1 = new JPanel();
        addTrainerButton = new JToggleButton();
        trainerLabel2 = new JLabel();
        trainerLabel1 = new JLabel();
        trainerTextField2 = new JTextField();
        trainerTextField1 = new JTextField();
        jLabel1 = new JLabel();
        addClearButton = new JButton("Limpiar");
        changeViewButton = new ViewChangeButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);
        getContentPane().setLayout(new java.awt.GridBagLayout());

        jPanel1.setLayout(new java.awt.GridBagLayout());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        getContentPane().add(jPanel1, gridBagConstraints);

        addTrainerButton.setBackground(new Color(100, 198, 125));
        addTrainerButton.setFont(new java.awt.Font("Roboto Black", 3, 14)); // NOI18N
        addTrainerButton.setText("Agregar");
        addTrainerButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                addTrainerButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                addTrainerButtonMouseExited(evt);
            }
        });
        addTrainerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addTrainerButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.ipadx = 50;
        gridBagConstraints.ipady = 10;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(268, 131, 0, 0);
        getContentPane().add(addTrainerButton, gridBagConstraints);

        addClearButton.setBackground(new Color(255, 80, 93));
        addClearButton.setFont(new java.awt.Font("Roboto Black", 3, 14)); // NOI18N

        addClearButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                addClearButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                addClearButtonMouseExited(evt);
            }
        });

        addClearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addClearButtonActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.ipadx = 50;
        gridBagConstraints.ipady = 10;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(268, 120, 0, 0);
        getContentPane().add(addClearButton, gridBagConstraints);

        changeViewButton.addActionListener(new java.awt.event.ActionListener() {
            @Override
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                changeViewButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.ipadx = 20;
        gridBagConstraints.ipady = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(60, 20, 0, 0);
        getContentPane().add(changeViewButton, gridBagConstraints);

        trainerLabel2.setFont(new java.awt.Font("Roboto Black", 3, 18)); // NOI18N
        trainerLabel2.setText("Entrenador 2°");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(38, 10, 0, 0);
        getContentPane().add(trainerLabel2, gridBagConstraints);

        trainerLabel1.setBackground(new Color(0, 0, 0));
        trainerLabel1.setFont(new java.awt.Font("Roboto Black", 3, 18)); // NOI18N
        trainerLabel1.setText("Entrenador 1°");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(30, 10, 0, 0);
        getContentPane().add(trainerLabel1, gridBagConstraints);

        trainerTextField2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                trainerTextField2FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                trainerTextField2FocusLost(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 146;
        gridBagConstraints.ipady = 10;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(28, 21, 0, 0);
        getContentPane().add(trainerTextField2, gridBagConstraints);

        trainerTextField1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                trainerTextField1FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                trainerTextField1FocusLost(evt);
            }
        });
        trainerTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                trainerTextField1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 146;
        gridBagConstraints.ipady = 10;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(20, 21, 0, 0);
        getContentPane().add(trainerTextField1, gridBagConstraints);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/View/Utils/fondoEntrenador.jpg"))); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.gridheight = 7;
        gridBagConstraints.ipadx = -116;
        gridBagConstraints.ipady = -20;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        getContentPane().add(jLabel1, gridBagConstraints);

        pack();
    }// </editor-fold>

    private void trainerTextField1ActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
    }

    private void trainerTextField1FocusGained(java.awt.event.FocusEvent evt) {
        // TODO add your handling code here:
    }

    private void trainerTextField1FocusLost(java.awt.event.FocusEvent evt) {
        // TODO add your handling code here:
        trainers[0] = new Trainer();
        String nombreEntrenador1 = trainerTextField1.getText().trim();
        trainers[0].setName(nombreEntrenador1);
    }
    
    private void trainerTextField2FocusGained(java.awt.event.FocusEvent evt) {
        // TODO add your handling code here:
    }

    private void trainerTextField2FocusLost(java.awt.event.FocusEvent evt) {
        // TODO add your handling code here:
        trainers[1] = new Trainer();
        String nombreEntrenador2 = trainerTextField2.getText().trim();
        trainers[1].setName(nombreEntrenador2);
    }
    
    private void addTrainerButtonActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
        String trainerName1 = trainerTextField1.getText().trim();
        String trainerName2 = trainerTextField2.getText().trim();
        controller.proccessTrainers(trainerName1, trainerName2);
    }

    private void addTrainerButtonMouseEntered(java.awt.event.MouseEvent evt) {
        // TODO add your handling code here:
        addTrainerButton.setBackground(new Color(28, 198, 77));
    }

    private void addTrainerButtonMouseExited(java.awt.event.MouseEvent evt) {
        // TODO add your handling code here:
        addTrainerButton.setBackground(new Color(100, 198, 125));
    }

    private void addClearButtonActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
        controller.clearFields();
    }

    private void addClearButtonMouseEntered(java.awt.event.MouseEvent evt) {
        // TODO add your handling code here:
        addClearButton.setBackground(new Color(255, 20, 33));
    }

    private void addClearButtonMouseExited(java.awt.event.MouseEvent evt) {
        // TODO add your handling code here:
        addClearButton.setBackground(new Color(255, 80, 93));
    }

    private void changeViewButtonActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
            dispose(); // Cierra la ventana actual  
            controller.changeView();
    }

    @Override
    public void showMenu() {
        setVisible(true);
    }

    @Override
    public void setController(TrainerController controller) {
        this.controller = (TrainerController) controller;
    }

    @Override
    public void showValidationError(String mensaje) {
        JOptionPane.showMessageDialog(this, mensaje, "Error", JOptionPane.ERROR_MESSAGE);
    }

    @Override
    public void clearFields() {
        trainerTextField1.setText("");
        trainerTextField2.setText("");
    }

    @Override
    public boolean validateNames(String nombre1, String nombre2) {
        if (nombre1.isEmpty() || nombre2.isEmpty()) {
            showValidationError("Los nombres de los entrenadores no pueden estar vacíos");
            return false;
        }
        if (nombre1.equals(nombre2)) {
            showValidationError("Los nombres de los entrenadores deben ser diferentes");
            return false;
        }
        if (nombre1.length() < 3 || nombre2.length() < 3) {
            showValidationError("Los nombres de los entrenadores deben tener al menos 3 caracteres");
            return false;
        }
        if (nombre1.length() > 12 || nombre2.length() > 12) {
            showValidationError("Los nombres de los entrenadores no pueden tener más de 12 caracteres");
            return false;
        }
        return true;
    }

    @Override
    public void nextView() {
        dispose();
        PokemonsSelectionController pokemonSelectController = new PokemonsSelectionController(new PokemonsSelectionGUIView(controller.getTrainers()), controller.getTrainers(), true);
        pokemonSelectController.initialize();   
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TrainerGUIView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TrainerGUIView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TrainerGUIView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TrainerGUIView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TrainerGUIView().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify
    private JToggleButton addTrainerButton;
    private JLabel trainerLabel1;
    private JLabel trainerLabel2;
    private JTextField trainerTextField1;
    private JTextField trainerTextField2;
    private JLabel jLabel1;
    private JPanel jPanel1;
    private ViewChangeButton changeViewButton;
    private JButton addClearButton;
    private TrainerController controller;
    // End of variables declaration
}
