package View.GUI;

import View.Interfaces.MainView;
import View.Utils.MusicPlayer;
import View.Utils.ViewChangeButton;
import View.Console.MainConsoleView;
import Controller.MainController;
import Controller.TrainerController;
import Model.GameStateManager;
import Model.PokemonBattle;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.Image;
import java.io.IOException;

import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author crisc
 */
public class MainGUIView extends JFrame implements MainView {
    private GameStateManager gameStateManager;
    private MainController controller;
    /**
     * Creates new form Inicio
     */
    public MainGUIView() {
        initComponents();
        gameStateManager = new GameStateManager();
// this.setUndecorated(true); // Opcional: elimina bordes
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel1 = new javax.swing.JPanel();
        playButton = new javax.swing.JToggleButton();
        background = new javax.swing.JLabel();
        changeViewButton = new ViewChangeButton();
        loadGameButton = new JButton("Cargar Partida");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jPanel1.setLayout(new java.awt.GridBagLayout());

        playButton.setFont(new java.awt.Font("Roboto Black", 3, 18)); // NOI18N
        playButton.setText("Jugar");
        playButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                playButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                playButtonMouseExited(evt);
            }
        });
        playButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                playButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipadx = 70;
        gridBagConstraints.ipady = 11;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(100, 400, 0, 0);
        jPanel1.add(playButton, gridBagConstraints);

        changeViewButton.setFont(new java.awt.Font("Roboto Black", 3, 18)); // NOI18N
        changeViewButton.addActionListener(new java.awt.event.ActionListener() {
            @Override
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                changeViewButtonActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.ipadx = 20;
        gridBagConstraints.ipady = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 400, 0, 0);
        jPanel1.add(changeViewButton, gridBagConstraints);

        loadGameButton.setBackground(new Color(102, 178, 255));
        loadGameButton.setForeground(Color.WHITE);
        loadGameButton.addActionListener(e -> loadGame());
        loadGameButton.setFont(new java.awt.Font("Roboto Black", 3, 18)); // NOI18N

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipadx = 20;
        gridBagConstraints.ipady = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(100, 20, 0, 0);
        jPanel1.add(loadGameButton, gridBagConstraints);

        background.setIcon(new javax.swing.ImageIcon(getClass().getResource("/View/Utils/inicio.jpeg"))); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = -136;
        gridBagConstraints.ipady = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        jPanel1.add(background, gridBagConstraints);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>

    private void playButtonActionPerformed(java.awt.event.ActionEvent evt) {
        controller.nextView();
    }

    private void playButtonMouseEntered(java.awt.event.MouseEvent evt) {
        playButton.setBackground(new Color(255,255,255));
    }

    private void playButtonMouseExited(java.awt.event.MouseEvent evt) {
        // TODO add your handling code here:
        playButton.setBackground(new Color(198, 198, 198));
    }

    private void changeViewButtonActionPerformed(java.awt.event.ActionEvent evt) {
        dispose();
        controller.changeView();
    }

    @Override
    public void showMenu() {
        setVisible(true);
    }

    @Override
    public void showMessage(String mensaje) {
        JOptionPane.showMessageDialog(this, mensaje);
    }

    @Override
    public void setController(MainController controller) {
        this.controller = controller;
    }

    @Override
    public void playMusic(String rutaMusica) {
        MusicPlayer.playMusic(rutaMusica);
    }

    @Override
    public void stopMusic() {
        MusicPlayer.stopMusic();
    }

    @Override
    public void nextView() {
        dispose();
        TrainerController trainerController = new TrainerController(new TrainerGUIView(), true);
        trainerController.initialize();
    }

    private void loadGame() {
        String[] savedGames = gameStateManager.listSavedGames();
        
        if (savedGames.length == 0) {
            JOptionPane.showMessageDialog(
                this,
                "No hay partidas guardadas",
                "Cargar Partida",
                JOptionPane.INFORMATION_MESSAGE
            );
            return;
        }
        
        String selectedGame = (String) JOptionPane.showInputDialog(
            this,
            "Selecciona una partida guardada:",
            "Cargar Partida",
            JOptionPane.QUESTION_MESSAGE,
            null,
            savedGames,
            savedGames[0]
        );
        
        if (selectedGame != null) {
            try {
                PokemonBattle loadedBattle = gameStateManager.loadGame(selectedGame);
                
                // Cerrar la ventana actual
                this.dispose();
                
                // Crear y mostrar la vista de batalla con la partida cargada
                BattleGUIView battleView = new BattleGUIView(
                    loadedBattle.getTrainers(),
                    new String[]{
                        loadedBattle.getCurrentPokemon(0).getPokedexId(),
                        loadedBattle.getCurrentPokemon(1).getPokedexId()
                    }
                );
                battleView.setPokemonBattle(loadedBattle);
                battleView.setVisible(true);
                
            } catch (IOException ex) {
                JOptionPane.showMessageDialog(
                    this,
                    "Error al cargar la partida: " + ex.getMessage(),
                    "Error",
                    JOptionPane.ERROR_MESSAGE
                );
            }
        }
    }


    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainGUIView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainGUIView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainGUIView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainGUIView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
    }

    class BackgroundPanel extends JPanel{
        private Image imagen;
        @Override
        public void paint(Graphics g) {
            imagen = new ImageIcon(getClass().getResource("/View/Utils/inicio.jpeg")).getImage();
            g.drawImage(imagen, 0, 0, getWidth(), getHeight(), this);


            setOpaque(false);
            super.paint(g);
        }

        @Override
        public Dimension getPreferredSize() {
            return new Dimension(657, 360); // Set fixed size (width x height)
        }
    }

    // Variables declaration - do not modify
    private javax.swing.JLabel background;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JToggleButton playButton;
    ViewChangeButton changeViewButton;
    private JButton loadGameButton;
    // End of variables declaration
}
